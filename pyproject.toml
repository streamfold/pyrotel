[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "rotel"
dynamic = ["version"]
description = "Lightweight OpenTelemetry collector"
readme = "README.md"
requires-python = ">=3.8"
keywords = []
license = "Apache-2.0"
authors = [
    { name = "Ray Jenkins", email = "ray@streamfold.com" },
    { name = "Mike Heffner", email = "mike@streamfold.com" },
]
classifiers = [
    # Python versions
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    # Application status
    "Development Status :: 3 - Alpha",
]
dependencies = [
    "typing-extensions"
]

[project.optional-dependencies]
dev = [
    "pkginfo>=1.12.0",
    "pytest>=7.0",
    "twine>=6.1.0",
]

[project.urls]
Homepage = "https://github.com/streamfold/pyrotel"
Issues = "https://github.com/streamfold/pyrotel/issues"
Source = "https://github.com/streamfold/pyrotel"

[tool.hatch.version]
path = "src/rotel/__about__.py"

[tool.hatch.build]
sources = ["src"]
exclude = ["scripts", "tests", "conftest.py"]

[tool.hatch.build.targets.wheel]
artifacts = [
    "src/rotel/rotel-agent",
]

[tool.hatch.envs.default]
installer = "uv"
dependencies = [
    "pytest",
    "pytest-cov",
    "pytest-mock",

    "opentelemetry-api",
    "opentelemetry-sdk",
    "opentelemetry-exporter-otlp-proto-http",
    "opentelemetry-exporter-otlp-proto-grpc",
]

[tool.hatch.envs.build]
installer = "uv"

[tool.hatch.envs.build.scripts]
all = "python scripts/build_all.py"
me = "_ROTEL_AGENT_PATH=\"{args}\" hatch build -t wheel"
for = "_ROTEL_AGENT_ARCH=\"{args}\" hatch build -t wheel"

[tool.hatch.build.targets.wheel.hooks.custom]
path = "scripts/build_hook.py"

[tool.pytest.ini_options]
pythonpath = [
    "src"
]

[[tool.hatch.envs.test.matrix]]
python = ["38", "39", "310", "311", "312", "313"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "isort",
    "ruff",
]

[tool.hatch.envs.lint.scripts]
check = [
    "isort --check .",
    "ruff check ."
]
fmt = [
    "isort .",
    "ruff check --fix ."
]

[tool.isort]
profile = "black"
lines_after_imports = 2

[tool.ruff.lint.extend-per-file-ignores]
"tests/test_*.py" = ["F811"] # ruff does not like pytest fixtures
